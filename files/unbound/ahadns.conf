#
# This is the unbond configuration used
# on all AhaDNS servers.
#

# Enable unbound-control (apparently needed in ubuntu 20.04)
remote-control:
    control-enable: yes
    
server:
    # Listen on all interfaces
    interface: 0.0.0.0
    interface: ::0
    interface: {Ipv6Addr}

    access-control: 0.0.0.0/0 allow
    access-control: ::0/0 allow

    # Statistics for Aha.Dns.Statistics.ServerApi
    statistics-cumulative: no
    extended-statistics: yes

    # Block and whitelist (order is important)
    include: /etc/unbound/unbound_blocklist.conf
    include: /etc/unbound/unbound_whitelist.conf

    port: 53
    do-ip4: yes
    do-udp: yes
    do-tcp: yes

    # May be set to yes if you have IPv6 connectivity
    do-ip6: yes

    # The following line will configure unbound to perform cryptographic
    # DNSSEC validation using the root trust anchor.
    # auto-trust-anchor-file: "/var/lib/unbound/root.key"
    
    # Use this only when you downloaded the list of primary root servers!
    root-hints: "/var/lib/unbound/root.hints"

    # Don't use Capitalization randomization as it known to cause DNSSEC issues sometimes
    # see https://discourse.pi-hole.net/t/unbound-stubby-or-dnscrypt-proxy/9378 for further details
    use-caps-for-id: no

    # Reduce EDNS reassembly buffer size.
    # Suggested by the unbound man page to reduce fragmentation reassembly problems
    edns-buffer-size: 1472

    # One thread should be sufficient, can be increased on beefy machines. In reality for most users running on small networks or on a single machine
    # it should be unnecessary to seek performance enhancement by increasing num-threads above 1.
    # Set to number of cores on server
    num-threads: {num_cores}

    # Ensure kernel buffer is large enough to not lose messages in traffic spikes
    # Max is increased by modifying /proc/sys/net/core/wmem_max and /proc/sys/net/core/rmem_max
    so-rcvbuf: 8m
    so-sndbuf: 8m

    ## Unbound Optimization and Speed Tweaks ##
    ## From: https://www.safematix.com/software/dns/unbound-root-server-setup/

    # the time to live (TTL) value lower bound, in seconds. Default 0.
    # If more than an hour could easily give trouble due to stale data.
    cache-min-ttl: 600

    # the time to live (TTL) value cap for RRsets and messages in the
    # cache. Items are not cached for longer. In seconds.
    cache-max-ttl: 86400

    # the number of slabs to use for cache and must be a power of 2 times the
    # number of num-threads set above. more slabs reduce lock contention, but
    # fragment memory usage.
    msg-cache-slabs: {num_coresx2}
    rrset-cache-slabs: {num_coresx2}
    infra-cache-slabs: {num_coresx2}
    key-cache-slabs: {num_coresx2}

    # Increase the memory size of the cache. Use roughly twice as much rrset cache
    # memory as you use msg cache memory. Due to malloc overhead, the total memory
    # usage is likely to rise to double (or 2.5x) the total cache memory.
    # total is rrset+msg*num_core?
    # On 1 core 1GB ram we use rrset-cache-size: 256m & msh-cache-size: 128m
    # On 1 core 2GB ram we use rrset-cache-size: 384 & msg-cache-size: 192 (Under asessment)
    # rrset-cache-size: {rrset_cache_mb}m
    # msg-cache-size: {msg_cache_mb}m
    rrset-cache-size: 512m
    msg-cache-size: 256m

    # IMPORTANT FOR TESTING: If you are testing and setup NSD or BIND  on
    # localhost you will want to allow the resolver to send queries to localhost.
    # Make sure to set do-not-query-localhost: yes . If yes, the above default
    # do-not-query-address entries are present.  if no, localhost can be queried
    # (for testing and debugging).
    do-not-query-localhost: yes

    #
    # Below config is inspired by: https://gist.github.com/MatthewVance/5051bf45cfed6e4a2a2ed9bb014bcd72
    #

    ###########################################################################
    # BASIC SETTINGS
    ###########################################################################

    # Rotates RRSet order in response (the pseudo-random number is taken from
    # the query ID, for speed and thread safety).
    rrset-roundrobin: yes

    ###########################################################################
    # LOGGING
    ###########################################################################

    # Do not print log lines to inform about local zone actions
    log-local-actions: no

    # Do not print one line per query to the log
    log-queries: no

    # Do not print one line per reply to the log
    log-replies: no

    # Do not print log lines that say why queries return SERVFAIL to clients
    log-servfail: no

    # Further limit logging
    logfile: /dev/null

    # Only log errors
    verbosity: 0

    ###########################################################################
    # PRIVACY SETTINGS
    ###########################################################################

    # RFC 8198. Use the DNSSEC NSEC chain to synthesize NXDO-MAIN and other
    # denials, using information from previous NXDO-MAINs answers. In other
    # words, use cached NSEC records to generate negative answers within a
    # range and positive answers from wildcards. This increases performance,
    # decreases latency and resource utilization on both authoritative and
    # recursive servers, and increases privacy. Also, it may help increase
    # resilience to certain DoS attacks in some circumstances.
    aggressive-nsec: yes

    # Extra delay for timeouted UDP ports before they are closed, in msec.
    # This prevents very delayed answer packets from the upstream (recursive)
    # servers from bouncing against closed ports and setting off all sort of
    # close-port counters, with eg. 1500 msec. When timeouts happen you need
    # extra sockets, it checks the ID and remote IP of packets, and unwanted
    # packets are added to the unwanted packet counter.
    delay-close: 5000

    # Number of bytes size of the aggressive negative cache.
    neg-cache-size: 8m

    # Send minimum amount of information to upstream servers to enhance
    # privacy. Only sends minimum required labels of the QNAME and sets
    # QTYPE to NS when possible.
    # See RFC 7816 "DNS Query Name Minimisation to Improve Privacy" for
    # details.
    qname-minimisation: yes

    ###########################################################################
    # SECURITY SETTINGS
    ###########################################################################

    # Deny queries of type ANY with an empty response.
    deny-any: yes

    # Trust glue only if it is within the servers authority
    harden-glue: yes

    # Require DNSSEC data for trust-anchored zones, if such data is absent, the zone becomes BOGUS
    harden-dnssec-stripped: yes

    # RFC 8020. returns nxdomain to queries for a name below another name that
    # is already known to be nxdomain.
    harden-below-nxdomain: yes

    # Very large queries are ignored. Default is off, since it is legal protocol wise  to
    # send  these,  and  could be necessary for operation if TSIG or EDNS payload is very
    # large.
    harden-large-queries: yes

    # Ignore very small EDNS buffer sizes from queries.
    harden-short-bufsize: yes

    # enable to not answer id.server and hostname.bind queries.
    hide-identity: yes

    # enable to not answer version.server and version.bind queries.
    hide-version: yes

    # If nonzero, unwanted replies are not only reported in statistics, but also
    # a running total is kept per thread. If it reaches the threshold, a warning
    # is printed and a defensive action is taken, the cache is cleared to flush
    # potential poison out of it.  A suggested value is 10000000, the default is
    # 0 (turned off).
    unwanted-reply-threshold: 1000000

    # Should additional section of secure message also be kept clean of unsecure
    # data. Useful to shield the users of this validator from potential bogus
    # data in the additional section. All unsigned data in the additional section
    # is removed from secure messages.
    val-clean-additional: yes

    ###########################################################################
    # PERFORMANCE SETTINGS
    ###########################################################################
    # https://nlnetlabs.nl/documentation/unbound/howto-optimise/

    # Number  of outgoing TCP buffers to allocate per thread. Default is 10. If set to 0,
    # or if do-tcp is "no", no TCP queries to authoritative servers are done. For larger
    # installations increasing this value is a good idea.
    outgoing-num-tcp: 100

    # Number  of incoming TCP buffers to allocate per thread. Default is 10. If set to 0,
    # or if do-tcp is "no",  no  TCP  queries  from  clients  are  accepted. For  larger
    # installations increasing this value is a good idea.
    incoming-num-tcp: 100

    # Do no insert authority/additional sections into response messages when
    # those sections are not required. This reduces response size
    # significantly, and may avoid TCP fallback for some responses. This may
    # cause a slight speedup.
    minimal-responses: yes

    # Perform prefetching of close to expired message cache entries
    # This only applies to domains that have been frequently queried
    prefetch: yes

    # Fetch the DNSKEYs earlier in the validation process, when a DS record is
    # encountered. This lowers the latency of requests at the expense of little
    # more CPU usage.
    prefetch-key: yes

    # Have unbound attempt to serve old responses from cache with a TTL of 0 in
    # the response without waiting for the actual resolution to finish. The
    # actual resolution answer ends up in the cache later on.
    serve-expired: yes

    # On Linux, set so-reuseport: yes,
    # that will significantly improve UDP performance (on kernels that support it,
    # otherwise it is inactive, the unbound-control status command shows if it is active).
    so-reuseport: yes

    # Increase number of file descriptors
    # Number of ports to open. This number of file descriptors can be opened
    # per thread.
    outgoing-range: 8192

    # The number of queries that every thread will service simultaneously. If
    # more queries arrive that need servicing, and no queries can be jostled
    # out (see jostle-timeout), then the queries are dropped.
    # This is best set at half the number of the outgoing-range.
    num-queries-per-thread: 4096

#
# End of AhaDNS unbound config
#